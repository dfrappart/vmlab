name: 'vm create/update - manual'

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug

jobs:
  terraform:
    name: 'Layer k8s'
    env:
      TF_VAR_AzureTenantID: ${{ secrets.AzureTenantID }}
      TF_VAR_AzureClientSecret: ${{ secrets.AzureClientSecret }}
      TF_VAR_AzureClientID: ${{ secrets.AzureClientID }}
      TF_VAR_AzureSubscriptionID: ${{ secrets.AzureSubscriptionID }}
      TF_VERSION: 1.13.1
      access_key: ${{ secrets.STORAGEACCESSKEY }}
      storage_account_name: ${{ secrets.STORAGEBACKEND }}
    runs-on: ubuntu-latest
    environment: lab

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraformconfig/vmforwork1

    steps:
    # Checkout the repository to the GitHub Actions runner
    - uses: actions/checkout@v4
    - uses: hashicorp/setup-terraform@v3

    - name: Run Bash script
      id: bashscript
      run: bash ./scripts/displaydate.sh

    - name: 'Terraform Format' 
      id: fmt
      run: terraform fmt

    - name: 'Terraform init'
      id: init
      run: terraform init -backend-config="./conf/lab/labbackend.hcl" -backend-config=storage_account_name=${{ env.storage_account_name }} -backend-config=access_key=${{ env.access_key }}
      
    - name: 'Terraform plan'
      id: plan
      run: terraform plan -var-file="./conf/lab/lab.tfvars"

#    - name: 'Terraform apply'
#      id: apply
#      run: terraform apply -auto-approve -var-file="./conf/lab/lab.tfvars"
